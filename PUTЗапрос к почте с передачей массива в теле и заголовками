Функция НастройкиПереводаПартииВАрхив(РеквизитИмяПартии) Экспорт

	Токен = ПолучитьДанныеТокенИлиКлюч().Токен; 
	Ключ = ПолучитьДанныеТокенИлиКлюч().Ключ; 
	
	тЗаписьJSON = Новый ЗаписьJSON;
	тПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
	тЗаписьJSON.УстановитьСтроку(тПараметрыJSON);
	ЗаписатьJSON(тЗаписьJSON, ПолучитьИмяПартииВТелоЗапроса(РеквизитИмяПартии));
	strJSON = тЗаписьJSON.Закрыть();
	
	СерверПочтыРФ = ПолучитьСерверПочтаРФ();      
	РесурсПочтаРФ = АдресПереводПартииВАрхив();
	
	HTTPЗапрос = ЗапросПоАдресуКПочтеРФ(Токен, Ключ, РесурсПочтаРФ, strJSON); 
	HTTP = СоздатьЗащищенноеСоединение(СерверПочтыРФ);  
	ОтветHTTP = ПолучитьОтветJSON(HTTP, HTTPЗапрос);
	
	Возврат ОтветHTTP;
	
КонецФункции 

Функция ПолучитьСерверПочтаРФ() Экспорт
	
	Сервер = "otpravka-api.pochta.ru";
	Возврат Сервер;	
	
КонецФункции 

Функция АдресПереводПартииВАрхив() Экспорт
	
	Ресурс = "/1.0/archive";
	Возврат Ресурс;	
	
КонецФункции 


Функция ПолучитьОтветJSON(HTTP, HTTPЗапрос) 
	
	СчетчикПопыток = 1;
	Пока СчетчикПопыток < 20 Цикл
		Попытка
			Ответ = HTTP.Записать(HTTPЗапрос);	
			Прервать;
		Исключение
			СчетчикПопыток = СчетчикПопыток + 1;
		КонецПопытки;	
	КонецЦикла;
	Если СчетчикПопыток >= 20 Тогда
		ВызватьИсключение "Не удалось записать объект!";	
	КонецЕсли;
	
	Возврат Ответ.ПолучитьТелоКакСтроку("UTF-8"); 
	
КонецФункции



Функция СоздатьЗащищенноеСоединение(Сервер)
	
	SSL = Новый ЗащищенноеСоединениеOpenSSL;
	HTTP = Новый HTTPСоединение(Сервер, , , , , , SSL);  
	Возврат HTTP;
	
КонецФункции

Функция БазовыйЗапросКПочтеРФ(Токен, Ключ, strJSON)
	
	Запрос = Новый HTTPЗапрос;
	Запрос.Заголовки.Вставить("Content-Type", "application/json;charset=UTF-8");
	Запрос.Заголовки.Вставить("Authorization", "AccessToken " + Токен);
	Запрос.Заголовки.Вставить("X-User-Authorization", "Basic " + Ключ);
	Запрос.УстановитьТелоИзСтроки(strJSON);
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьИмяПартииВТелоЗапроса(ИмяПартии)
	// Массив требует Почта РФ
	МассивСИменемПартии = Новый Массив;
	МассивСИменемПартии.Добавить(ИмяПартии);
	
	Если ИмяПартии <> "" Тогда
	
		Возврат МассивСИменемПартии;	
	
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отсутствует имя партии!";
		Сообщение.Сообщить();
		Возврат "";
		
	КонецЕсли;
	
КонецФункции 


Функция ЗапросПоАдресуКПочтеРФ(Токен, Ключ, Ресурс, strJSON)
	
 	БазовыйЗапрос = БазовыйЗапросКПочтеРФ(Токен, Ключ, strJSON);
	БазовыйЗапрос.АдресРесурса = Ресурс;
	Возврат БазовыйЗапрос;
	
КонецФункции

Функция ПолучитьДанныеТокенИлиКлюч()
	
	Данные = Новый Структура();
	Данные.Вставить("Токен", бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("токен")); 
	Данные.Вставить("Ключ", бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("ключ")); 	
	Возврат Данные;
	
КонецФункции 
